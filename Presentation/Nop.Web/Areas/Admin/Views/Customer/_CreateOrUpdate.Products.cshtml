@using Nop.Services.Stores
@model CustomerModel
@inject IStoreService storeService
@if (Model.Id > 0)
{
    <div class="card-body">
        @await Html.PartialAsync("Table", new DataTablesModel
    {
    Name = "products-grid",
    UrlRead = new DataUrl("ProductList", "Customer", new RouteValueDictionary { [nameof(Model.CustomerProductSearchModel.CustomerId)] = Model.Id }),
    UrlDelete = new DataUrl("ProductDelete", "Customer", null),
    UrlUpdate = new DataUrl("ProductUpdate", "Customer", null),
    Length = Model.CustomerProductSearchModel.PageSize,
    LengthMenu = Model.CustomerProductSearchModel.AvailablePageSizes,
    ColumnCollection = new List<ColumnProperty>
    {
    new ColumnProperty(nameof(CustomerProductModel.ProductName))
    {
    Title = T("Admin.Catalog.Categories.Products.Fields.Product").Text
    },
    new ColumnProperty(nameof(CustomerProductModel.DisplayOrder))
    {
    Title = T("Admin.Catalog.Categories.Products.Fields.DisplayOrder").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.CenterAll,
    Editable = true,
    EditType = EditType.Number
    },
    new ColumnProperty(nameof(CustomerProductModel.Id))
    {
    Title = T("Admin.Common.View").Text,
    Width = "150",
    ClassName = NopColumnClassDefaults.Button,
    Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/", nameof(CustomerProductModel.Id)))
    },
    new ColumnProperty(nameof(CustomerProductModel.Id))
    {
    Title = T("Admin.Common.Edit").Text,
    Width = "200",
    ClassName =  NopColumnClassDefaults.Button,
    Render = new RenderButtonsInlineEdit()
    },
    new ColumnProperty(nameof(CustomerProductModel.Id))
    {
    Title = T("Admin.Common.Delete").Text,
    Width = "100",
    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
    ClassName = NopColumnClassDefaults.Button
    }
    }
    })
    </div>
    <div class="card-footer">
        <button type="submit" id="btnAddNewProduct"
            onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "Customer", new { customerId = Model.Id, btnId = "btnRefreshProducts", formId = "customer-form" }))', 800, 800, true); return false;"
            class="btn btn-primary">
            @T("Admin.Catalog.Categories.Products.AddNew")
        </button>
        <button type="submit" id="btnRefreshProducts" style="display: none"></button>
        <script>
            $(document).ready(function () {
                $('#btnRefreshProducts').click(function () {
                    //refresh grid
                    updateTable('#products-grid');

                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
    </div>
}
else
{
    <div class="card-body">
        @T("Admin.Catalog.Categories.Products.SaveBeforeEdit")
    </div>
}

